package jp.co.kenshu.controller;

import java.io.IOException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import jp.co.kenshu.dto.ResultDto;

@Controller
public class FileUploadController {
	private static final Log LOG = LogFactory.getLog(FileUploadController.class);

    @RequestMapping(value = "/upload", method = RequestMethod.GET)
    public String showUploadForm() {
        return "upload";
    }

    @RequestMapping(value = "/upload", method = RequestMethod.POST)
    @ResponseBody
    public ResultDto uploadFile(
        @RequestParam("file") MultipartFile multipartFile[]) 
                                            throws IOException{
        // ファイル名
        String fileName = multipartFile[0].getOriginalFilename();
//        // ファイルの大きさ（単位はbyte）
//        long size = multipartFile.getSize();
//        // コンテンツタイプ
//        String contentType = multipartFile.getContentType();
//        // 内容（byte配列）
//        byte[] fileContents = multipartFile.getBytes();
//
//        // ファイルとして保存
//        multipartFile.transferTo(new File("/tmp/" + fileName));
//
//        InputStream is = null;
//        try {
//            // ファイルの内容を読み込むためのInputStream
//            is = multipartFile.getInputStream();
//
//            // InputStreamを使用した処理
//        } finally {
//        	// 必ずcloseする
//            is.close();
//        }
//
//        LOG.trace("size=" + size);
//        LOG.trace("contentType=" + contentType);
//        LOG.trace("fileContents=" + new String(fileContents, "UTF-8"));

        throw new RuntimeException();

       
        
        ResultDto dto = new ResultDto();
        dto.setResult("OK");
        return dto;
    }
}
